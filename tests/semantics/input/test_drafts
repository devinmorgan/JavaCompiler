 15) inheritance
    -- "this" can refer to method or property of the parent
       class of that is not necessarily declared in the current
       class
    -- to use a valid interface, it must already be declared
    -- child classes can access the fields of their parent classes
       without declaring those same fields
    -- child classes can only add additional fields, they cannot
       re-declare fields they inherit
    -- child classes CAN override methods they inherit from their
       parents by re-declaring a method with the same signature
       as they one they inherited
    -- sub-classes are compatible wherever their parent classes
       are used but not the other way around
    -- ***All the above applies to arrays of parent objects and
       arrays of child objects.
    -- Types permitted are not just equivalent types but also
           parameter types as well
 16) interfaces
    -- classes can only implement interfaces of interfaces that
       have been declared
    -- a class that implements an interface must implement all
       of the methods in the interface (i.e. they must declare
       methods that match the signatures exactly)
    -- a class must declare that it implements an interface to
       be a sub-type. Just implementing all of the required methods
       is not sufficient.
    -- interfaces are viable Types and can be used anywhere that
       that a Type would go (e.g as method return type or Array
       type)
    -- sub-classes inherit all the parent classes interfaces
    -- arrays of a type A that inherit interface I are compatible
       wherever arrays of type I can be used
    -- Types permitted are not just equivalent types but also
       parameter types as well
 20) expr
    -- + - /* % < > >= <= can only be applied on integers
       -- the result of + - /* % is an int
       -- the result of < > >= <= is a boolean
    -- the operands of ! && || must be booleans, and they return a
       boolean as well
    -- the lhs of = must always evaluate to a store location